짝 / 홀수 엘리베이터

// case 1

1. 짝수 / 홀수를 판별하는 함수 제작
  - Number % 2 === 0 ? 'even' : 'odd'

2. 모든 층수의 배열을 생성한다.

2. 현재 층수를 입력 받는다.

3. 모든 층수의 배열에서 현재 층수에 해당하는 요소를 제거한다.

4. 현재 층수가 짝수인지 홀수인지 판별한다.

5. 예외 층수와 함께 짝/홀수 별 리스트업을 한다.
  - 짝수 : 현재층을 제외, 지하 1층, 1층을 포함한 짝수 층
  - 홀수 : 현재층을 제외, 지하 1층과 10층을 포함한 홀수 층

6. 현재 층수에서 갈 수 있는 층의 리스트를 보여주고, 입력값을 받는다.

7. 해당 층으로 운행한다.

8. 도착한다.

9. 멈춘다.

10. 문을 연다.

11. 문을 닫는다.


// case 2

# 엘리베이터 별로 다른 함수를 제작한다
1. 짝/홀수 별 엘리베이터 배열 생성
  - 짝수 엘리베이터 : 지하 1층, 1층을 포함한 짝수층 배열
  - 홀수 엘리베이터 : 지하 1층, 10층을 포함한 홀수층 배열

2. 짝/홀수 별 엘리베이터 호출
  - 1에서 작성한 배열에 해당하는 층에서만 호출 가능
  - 배열 외에 층에서 호출을 요청하면 동작하지 않는다.
  - 호출 받은 층에 도착하면 문이 열린다.
  - 5초 뒤 문이 닫힌다.

3. 짝/홀수 별 엘리베이터 운행
  - 1에서 작성한 배열에 해당하는 층만 입력 가능
  - 현재 층과 같은 층을 입력하면 입력을 취소하고, 아무것도 하지 않는다
  - 배열에 해당하지 않는 층수를 입력하면 동작하지 않는다.
  - 배열에 해당하는 층수를 입력하면 해당 층으로 운행한다.

4. 운행 종료
  - 입력받은 층으로 엘리베이터가 운행이 완료되면, 문이 열린다.
  - 문이 열린지 5초가 지나면 문이 닫힌다.
  - 새로운 호출을 기다린다.